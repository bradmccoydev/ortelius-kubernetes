helmCharts:
- name: backstage
  namespace: backstage
  version: 0.0.8
  repo: https://ortelius.github.io/backstage
  releaseName: backstage
  includeCRDs: true
  valuesInline:
    app:
      image:
        repository: ghcr.io/ortelius/backstage/app
        tag: "0.0.1"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: HTTP
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
        hosts:
          - backstage.ortelius.io
    backend:
      image:
        repository: ghcr.io/ortelius/backstage/backend
        tag: "0.0.1"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: HTTP
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
        hosts:
          - backstage-backend.ortelius.io
    psql:
      host: ortelius.postgres.database.azure.com
      port: 5432
      username: dev
      password:
        secret: postgres-secrets
        key: POSTGRES_PASSWORD
    appConfig:
      app:
        title: Ortelius Backstage
        baseUrl: https://backstage.ortelius.io
      organization: {}
      backend:
        baseUrl: https://backstage.ortelius.io
        listen:
          port: 7007
        cors:
          origin: https://backstage.ortelius.io
          methods: [GET, POST, PUT, DELETE]
          credentials: true
        database:
          client: pg
          ## Environment variables provide based on postgresql or psql.
          connection:
            host: ${POSTGRES_HOST}
            port: ${POSTGRES_PORT}
            user: ${POSTGRES_USER}
            password: ${POSTGRES_PASSWORD}
      techdocs:
        builder: external
