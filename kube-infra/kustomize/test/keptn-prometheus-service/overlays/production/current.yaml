# Source: prometheus-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-prometheus-service
  labels:
    helm.sh/chart: prometheus-service-0.0.1
    app.kubernetes.io/name: prometheus-service
    app.kubernetes.io/instance: chart-1663966772
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: prometheus-service/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keptn-read-secret-prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
---
# Source: prometheus-service/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keptn-prometheus-sli-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keptn-read-secret-prometheus
subjects:
  - kind: ServiceAccount
    name: keptn-prometheus-service
    namespace: keptn
---
# Source: prometheus-service/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-prometheus-service
  namespace: observability
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
      - create
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
---
# Source: prometheus-service/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-prometheus-service
  namespace: observability
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-prometheus-service
subjects:
  - kind: ServiceAccount
    name: keptn-prometheus-service
    namespace: keptn
---
# Source: prometheus-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: chart-1663966772-prometheus-service
  labels:
    helm.sh/chart: prometheus-service-0.0.1
    app.kubernetes.io/name: prometheus-service
    app.kubernetes.io/instance: chart-1663966772
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prometheus-service
    app.kubernetes.io/instance: chart-1663966772
---
# Source: prometheus-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chart-1663966772-prometheus-service
  labels:
    helm.sh/chart: prometheus-service-0.0.1
    app.kubernetes.io/name: prometheus-service
    app.kubernetes.io/instance: chart-1663966772
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-service
      app.kubernetes.io/instance: chart-1663966772
  template:
    metadata:
      labels:
        helm.sh/chart: prometheus-service-0.0.1
        app.kubernetes.io/name: prometheus-service
        app.kubernetes.io/instance: chart-1663966772
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: keptn-prometheus-service
      securityContext:
        {}
      containers:
        - name: prometheus-service
          securityContext:
            {}
          image: "keptncontrib/prometheus-service:0.9.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
          env:
            - name: METRICS_SCRAPE_PATH
              value: '/metrics'
            - name: PROMETHEUS_NS
              value: 'observability'
            - name: PROMETHEUS_CM
              value: 'prometheus-server'
            - name: PROMETHEUS_LABELS
              value: 'component=server'
            - name: HEALTH_ENDPOINT_PORT
              value: '8081'
            - name: PROMETHEUS_ENDPOINT
              value: "http://kube-prometheus-stack-prometheus.observability:9090"
            - name: PROMETHEUS_CONFIG_FILENAME
              value: 'prometheus.yml'
            - name: ALERT_MANAGER_CONFIG_FILENAME
              value: 'alertmanager.yml'
            - name: ALERT_MANAGER_CM
              value: 'prometheus-alertmanager'
            - name: ALERT_MANAGER_LABELS
              value: 'component=alertmanager'
            - name: ALERT_MANAGER_NS
              value: 'observability'
            - name: ALERT_MANAGER_TEMPLATE_CM
              value: 'alertmanager-templates'
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SCRAPE_INTERVAL
              value: '30s'
            - name: CREATE_TARGETS
              value: 'true'
            - name: CREATE_ALERTS
              value: 'true'
            - name: PUBSUB_TOPIC
              value: sh.keptn.event.monitoring.configure,sh.keptn.event.get-sli.triggered
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_DEPLOYMENT_COMPONENT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/component'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
