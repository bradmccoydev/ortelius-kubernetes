apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
data:
  context: |
    argocdUrl: https://argocd.ortelius.io
  service.webhook.keptn: |
    url: https://keptn.ortelius.io/api/v1/event
    headers:
    - name: x-token
      value: $keptn-x-token
    - name: Content-Type
      value: application/json
  template.keptn-outofsync: |
    webhook:
      keptn:
        method: POST
        body: |
          {
            "data": {
              "configurationChange": {},
              "labels": {
                "version": "{{.app.status.sync.revision}}",
                "appname": "{{.app.metadata.name}}",
                "argocd": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}"
              },
              "project": "{{.app.metadata.labels.keptnProject}}",
              "service": "{{.app.metadata.labels.keptnService}}",
              "stage": "{{.app.metadata.labels.keptnStage}}",
              "keptnSequence": "{{.app.metadata.labels.keptnSequence}}",
            },
            "source": "argocd",
            "specversion": "1.0",
            "type": "sh.keptn.event.{{.app.metadata.labels.keptnStage}}.{{.app.metadata.labels.keptnSequence}}.triggered",
            "shkeptnspecversion": "0.2.3"
          }
  template.keptn-deployed: |
    webhook:
      keptn:
        method: POST
        body: |
          {
            "data": {
              "labels": {
                "version": "{{.app.status.sync.revision}}"
              },
              "project": "{{.app.metadata.labels.keptnProject}}",
              "service": "{{.app.metadata.labels.keptnService}}",
              "stage": "{{.app.metadata.labels.keptnStage}}"
            },
            "source": "argocd",
            "specversion": "1.0",
            "type": "sh.keptn.event.{{.app.metadata.labels.keptnStage}}.{{.app.metadata.labels.keptnSequence}}.triggered"
          }
  trigger.on-out-of-sync-status: |
    - when: app.status.sync.status == 'OutOfSync'
      send: [keptn-outofsync]
  trigger.on-deployed: |
    - when: app.status.sync.status == 'Synced' and app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      send: [keptn-deployed]
